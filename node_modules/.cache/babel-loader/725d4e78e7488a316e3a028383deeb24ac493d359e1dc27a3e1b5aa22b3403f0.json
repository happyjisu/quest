{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";//초기 랜덤 데이터\nfunction makeItem(){const items=[{\"id\":1,\"val\":\"빨래하기\",\"done\":false},{\"id\":2,\"val\":\"장보기\",\"done\":false},{\"id\":3,\"val\":\"청소하기\",\"done\":false},{\"id\":4,\"val\":\"요리하기\",\"done\":false},{\"id\":5,\"val\":\"운동하기\",\"done\":false},{\"id\":6,\"val\":\"책 읽기\",\"done\":false},{\"id\":7,\"val\":\"이메일 확인\",\"done\":false},{\"id\":8,\"val\":\"프로젝트 작업\",\"done\":false},{\"id\":9,\"val\":\"미팅 준비\",\"done\":false},{\"id\":10,\"val\":\"전화하기\",\"done\":false}];return items;}let cnt=10;export const todoListSlice=createSlice({name:'todoList',initialState:{value:makeItem()},reducers:{updateTodo:(state,action)=>{const newData=state.value.map(todo=>{// todo => {id: 1, text: '1번째 할일', done: false},\nif(todo.id===action.payload)return{...todo,done:!todo.done};else return todo;});state.value=newData;},deleteTodo:(state,action)=>{const newData=state.value.filter(todo=>{if(todo.id===action.payload)return false;else return true;});state.value=newData;},addTodo:(state,action)=>{const todo={id:++cnt,val:action.payload,done:false};state.value=state.value.concat(todo);}}});// 각 케이스에 대한 리듀서 함수들을 생성\nexport const{updateTodo,deleteTodo,addTodo}=todoListSlice.actions;export default todoListSlice.reducer;","map":{"version":3,"names":["createSlice","makeItem","items","cnt","todoListSlice","name","initialState","value","reducers","updateTodo","state","action","newData","map","todo","id","payload","done","deleteTodo","filter","addTodo","val","concat","actions","reducer"],"sources":["D:/workspace/2024_KH_react/todo_list_redux/src/store/todoListSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//초기 랜덤 데이터\r\nfunction makeItem(){\r\n  const items = [\r\n    {\r\n        \"id\": 1,\r\n        \"val\": \"빨래하기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"val\": \"장보기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"val\": \"청소하기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"val\": \"요리하기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"val\": \"운동하기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"val\": \"책 읽기\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"val\": \"이메일 확인\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"val\": \"프로젝트 작업\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"val\": \"미팅 준비\",\r\n        \"done\": false\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"val\": \"전화하기\",\r\n        \"done\": false\r\n    }\r\n];\r\n  return items;\r\n}\r\nlet cnt = 10;\r\nexport const todoListSlice = createSlice({\r\n  name: 'todoList',\r\n  initialState: {\r\n    value: makeItem()\r\n  },\r\n  reducers: {\r\n    updateTodo: (state, action) =>  {\r\n        const newData = state.value.map((todo) => {\r\n          // todo => {id: 1, text: '1번째 할일', done: false},\r\n          if (todo.id === action.payload) return { ...todo, done: !todo.done };\r\n          else return todo;\r\n        });\r\n        state.value = newData; \r\n    },\r\n    deleteTodo: (state, action) => {\r\n      const newData = state.value.filter((todo) => {\r\n        if (todo.id === action.payload) return false;\r\n        else return true;\r\n      });\r\n\r\n      state.value = newData;\r\n    },\r\n    addTodo: (state, action) => {\r\n      const todo = { id: ++cnt, val : action.payload, done: false };\r\n      state.value = state.value.concat(todo)\r\n    }\r\n  }\r\n})\r\n\r\n// 각 케이스에 대한 리듀서 함수들을 생성\r\nexport const { updateTodo, deleteTodo, addTodo } = todoListSlice.actions\r\n\r\nexport default todoListSlice.reducer"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C;AACA,QAAS,CAAAC,QAAQA,CAAA,CAAE,CACjB,KAAM,CAAAC,KAAK,CAAG,CACZ,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,QAAQ,CACf,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,SAAS,CAChB,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,KACZ,CAAC,CACD,CACI,IAAI,CAAE,EAAE,CACR,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KACZ,CAAC,CACJ,CACC,MAAO,CAAAA,KAAK,CACd,CACA,GAAI,CAAAC,GAAG,CAAG,EAAE,CACZ,MAAO,MAAM,CAAAC,aAAa,CAAGJ,WAAW,CAAC,CACvCK,IAAI,CAAE,UAAU,CAChBC,YAAY,CAAE,CACZC,KAAK,CAAEN,QAAQ,CAAC,CAClB,CAAC,CACDO,QAAQ,CAAE,CACRC,UAAU,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGF,KAAK,CAACH,KAAK,CAACM,GAAG,CAAEC,IAAI,EAAK,CACxC;AACA,GAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAE,MAAO,CAAE,GAAGF,IAAI,CAAEG,IAAI,CAAE,CAACH,IAAI,CAACG,IAAK,CAAC,CAAC,IAChE,OAAO,CAAAH,IAAI,CAClB,CAAC,CAAC,CACFJ,KAAK,CAACH,KAAK,CAAGK,OAAO,CACzB,CAAC,CACDM,UAAU,CAAEA,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC7B,KAAM,CAAAC,OAAO,CAAGF,KAAK,CAACH,KAAK,CAACY,MAAM,CAAEL,IAAI,EAAK,CAC3C,GAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAE,MAAO,MAAK,CAAC,IACxC,OAAO,KAAI,CAClB,CAAC,CAAC,CAEFN,KAAK,CAACH,KAAK,CAAGK,OAAO,CACvB,CAAC,CACDQ,OAAO,CAAEA,CAACV,KAAK,CAAEC,MAAM,GAAK,CAC1B,KAAM,CAAAG,IAAI,CAAG,CAAEC,EAAE,CAAE,EAAEZ,GAAG,CAAEkB,GAAG,CAAGV,MAAM,CAACK,OAAO,CAAEC,IAAI,CAAE,KAAM,CAAC,CAC7DP,KAAK,CAACH,KAAK,CAAGG,KAAK,CAACH,KAAK,CAACe,MAAM,CAACR,IAAI,CAAC,CACxC,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEL,UAAU,CAAES,UAAU,CAAEE,OAAQ,CAAC,CAAGhB,aAAa,CAACmB,OAAO,CAExE,cAAe,CAAAnB,aAAa,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}